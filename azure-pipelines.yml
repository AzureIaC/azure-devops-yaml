trigger:
  batch: true
  branches:
    include:
    - master
    - develop
    exclude:
    - releases/old*
  tags:
    exclude:
    - do_not_build
  paths:
    exclude:
    - README.md
pr: none

variables:
  vmImage: 'ubuntu-latest'
  majorVersion: 1
  minorVersion: 0
  applicationName: 'todo'

# Reference: https://docs.microsoft.com/en-us/azure/devops/pipelines/process/run-number?view=azure-devops&tabs=yaml
name: $(BuildDefinitionName)_$(SourceBranchName)_$(majorVersion).$(minorVersion)$(Rev:.r)

stages:

- stage: BLD
  displayName: Build(CI)
  variables: {buildConfiguration: 'Release'}
  jobs:

  - job: Infrastructure
    pool:
      vmImage: $(vmImage)
    steps:
    - script: echo "Running the Infrastructure build for $(applicationName)"
      displayName: 'Starup'
    - template: 'pipelines/infrastructure/build.yml'

  - job: Application
    pool:
      vmImage: $(vmImage)
    dependsOn: Infrastructure
    steps:
    - script: echo "Running the Application build for $(applicationName)"
      displayName: 'Starup'
    - template: 'pipelines/application/build.yml'
      parameters: {buildConfiguration: $(buildConfiguration)}

- stage: DEV
  displayName: 'DEV(CD)'
  condition: and(succeeded('BLD'), eq(variables['Build.SourceBranch'], 'refs/heads/develop'))
  dependsOn: 
   - BLD
  variables: 
    stage: 'dev'
  jobs:
  
  - job: Primary_AustraliaSouthEast
    pool:
      vmImage: $(vmImage)
    steps:
    - template: 'pipelines/infrastructure/deploy.yml'
      parameters: {type: 'primary', spn: 'SPN', location: 'australiasoutheast'}
    - template: 'pipelines/application/deploy.yml'
      parameters: {type: 'primary', spn: 'SPN'}

- stage: QA
  displayName: 'QA(CD)'
  condition: and(succeeded('DEV'), eq(variables['Build.SourceBranch'], 'refs/heads/develop'))
  dependsOn: 
   - DEV
  variables: 
    stage: 'qa'
  jobs:

  - job: Primary_AustraliaSouthEast
    pool:
      vmImage: $(vmImage)
    steps:
    - template: 'pipelines/infrastructure/deploy.yml'
      parameters: {type: 'primary', spn: 'SPN'}
    - template: 'pipelines/application/deploy.yml'
      parameters: {type: 'primary', spn: 'SPN'}

- stage: UAT
  displayName: 'UAT(CD)'
  condition: and(succeeded('BLD'), eq(variables['Build.SourceBranch'], 'refs/heads/master'))
  dependsOn: 
   - BLD
  variables: 
    stage: 'uat'
  jobs:

  - job: Primary_AustraliaSouthEast
    pool:
      vmImage: $(vmImage)
    steps:
    - template: 'pipelines/infrastructure/deploy.yml'
      parameters: {type: 'primary', spn: 'SPN', location: 'australiasoutheast'}
    - template: 'pipelines/application/deploy.yml'
      parameters: {type: 'primary', spn: 'SPN'}

- stage: STG
  displayName: 'STAGING(CD)'
  condition: and(succeeded('UAT'), eq(variables['Build.SourceBranch'], 'refs/heads/master'))
  dependsOn: 
   - UAT
  variables: 
    stage: 'stg'
  jobs:
  
  - job: Primary_AustraliaSouthEast
    pool:
      vmImage: $(vmImage)
    steps:
    - template: 'pipelines/infrastructure/deploy.yml'
      parameters: {type: 'primary', spn: 'SuperServicePrincipal', location: 'australiasoutheast'}
    - template: 'pipelines/application/deploy.yml'
      parameters: {type: 'primary', spn: 'SuperServicePrincipal'}

- stage: PRD
  displayName: 'PROD(CD)'
  condition: and(succeeded('STG'), eq(variables['Build.SourceBranch'], 'refs/heads/master'))
  dependsOn: 
   - STG
  variables: 
    stage: 'prd'
  jobs:
  
  - job: Primary_AustraliaSouthEast
    pool:
      vmImage: $(vmImage)
    steps:
    - template: 'pipelines/infrastructure/deploy.yml'
      parameters: {type: 'primary', spn: 'SuperServicePrincipal', location: 'australiasoutheast'}
    - template: 'pipelines/application/deploy.yml'
      parameters: {type: 'primary', spn: 'SuperServicePrincipal'}
  
  - job: Secondary_AustraliaEast
    pool:
      vmImage: $(vmImage)
    steps:
    - template: 'pipelines/infrastructure/deploy.yml'
      parameters: {type: 'secondary', spn: 'SuperServicePrincipal', location: 'australiaeast'}
    - template: 'pipelines/application/deploy.yml'
      parameters: {type: 'secondary', spn: 'SuperServicePrincipal'}

    
